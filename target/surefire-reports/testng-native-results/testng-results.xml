<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="12" total="34" passed="18" failed="0" skipped="4">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-09T20:35:47 IST" name="Surefire suite" finished-at="2023-01-09T20:42:18 IST" duration-ms="391149">
    <groups>
    </groups>
    <test started-at="2023-01-09T20:35:47 IST" name="Surefire test" finished-at="2023-01-09T20:42:18 IST" duration-ms="391149">
      <class name="BaseTest.Test7_ExplorePlusePageTest">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:BaseTest.Test7_ExplorePlusePageTest@65aa6596]" started-at="2023-01-09T20:41:59 IST" name="startTest" finished-at="2023-01-09T20:42:00 IST" duration-ms="1164" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseTest.Test7_ExplorePlusePageTest.ExplorePlus() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="ExplorePlus()[pri:1, instance:BaseTest.Test7_ExplorePlusePageTest@65aa6596]" started-at="2023-01-09T20:42:00 IST" name="ExplorePlus" finished-at="2023-01-09T20:42:01 IST" duration-ms="15" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping this exception]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping this exception
at ExcelReport.ExcelManager.toCheckExecutionRequired(ExcelManager.java:37)
at BaseTest.Test7_ExplorePlusePageTest.ExplorePlus(Test7_ExplorePlusePageTest.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExplorePlus -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:BaseTest.Test7_ExplorePlusePageTest@65aa6596]" started-at="2023-01-09T20:42:01 IST" name="reportFlush" finished-at="2023-01-09T20:42:01 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ExplorePlus status=SKIP method=Test7_ExplorePlusePageTest.ExplorePlus()[pri:1, instance:BaseTest.Test7_ExplorePlusePageTest@65aa6596] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:BaseTest.Test7_ExplorePlusePageTest@65aa6596]" started-at="2023-01-09T20:42:01 IST" name="startTest" finished-at="2023-01-09T20:42:02 IST" duration-ms="1190" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseTest.Test7_ExplorePlusePageTest.ExplorePlus1() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="ExplorePlus1()[pri:2, instance:BaseTest.Test7_ExplorePlusePageTest@65aa6596]" started-at="2023-01-09T20:42:02 IST" name="ExplorePlus1" finished-at="2023-01-09T20:42:18 IST" duration-ms="16193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExplorePlus1 -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:BaseTest.Test7_ExplorePlusePageTest@65aa6596]" started-at="2023-01-09T20:42:18 IST" name="reportFlush" finished-at="2023-01-09T20:42:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ExplorePlus1 status=SUCCESS method=Test7_ExplorePlusePageTest.ExplorePlus1()[pri:2, instance:BaseTest.Test7_ExplorePlusePageTest@65aa6596] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- BaseTest.Test7_ExplorePlusePageTest -->
      <class name="BaseTest.Test6_FooterPageTest">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:BaseTest.Test6_FooterPageTest@2c7d121c]" started-at="2023-01-09T20:39:48 IST" name="startTest" finished-at="2023-01-09T20:39:49 IST" duration-ms="1182" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseTest.Test6_FooterPageTest.SocialTest() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="SocialTest()[pri:1, instance:BaseTest.Test6_FooterPageTest@2c7d121c]" started-at="2023-01-09T20:39:49 IST" name="SocialTest" finished-at="2023-01-09T20:40:46 IST" duration-ms="57700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SocialTest -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:BaseTest.Test6_FooterPageTest@2c7d121c]" started-at="2023-01-09T20:40:46 IST" name="reportFlush" finished-at="2023-01-09T20:40:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SocialTest status=SUCCESS method=Test6_FooterPageTest.SocialTest()[pri:1, instance:BaseTest.Test6_FooterPageTest@2c7d121c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:BaseTest.Test6_FooterPageTest@2c7d121c]" started-at="2023-01-09T20:40:46 IST" name="startTest" finished-at="2023-01-09T20:40:48 IST" duration-ms="1014" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseTest.Test6_FooterPageTest.FaQTest() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="FaQTest()[pri:2, instance:BaseTest.Test6_FooterPageTest@2c7d121c]" started-at="2023-01-09T20:40:48 IST" name="FaQTest" finished-at="2023-01-09T20:40:48 IST" duration-ms="2" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping this exception]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping this exception
at ExcelReport.ExcelManager.toCheckExecutionRequired(ExcelManager.java:37)
at BaseTest.Test6_FooterPageTest.FaQTest(Test6_FooterPageTest.java:42)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FaQTest -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:BaseTest.Test6_FooterPageTest@2c7d121c]" started-at="2023-01-09T20:40:48 IST" name="reportFlush" finished-at="2023-01-09T20:40:48 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FaQTest status=SKIP method=Test6_FooterPageTest.FaQTest()[pri:2, instance:BaseTest.Test6_FooterPageTest@2c7d121c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:BaseTest.Test6_FooterPageTest@2c7d121c]" started-at="2023-01-09T20:40:48 IST" name="startTest" finished-at="2023-01-09T20:40:49 IST" duration-ms="1206" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseTest.Test6_FooterPageTest.cancel() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="cancel()[pri:3, instance:BaseTest.Test6_FooterPageTest@2c7d121c]" started-at="2023-01-09T20:40:49 IST" name="cancel" finished-at="2023-01-09T20:41:15 IST" duration-ms="25889" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cancel -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:BaseTest.Test6_FooterPageTest@2c7d121c]" started-at="2023-01-09T20:41:15 IST" name="startTest" finished-at="2023-01-09T20:41:16 IST" duration-ms="1105" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseTest.Test6_FooterPageTest.giftCard() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:BaseTest.Test6_FooterPageTest@2c7d121c]" started-at="2023-01-09T20:41:15 IST" name="reportFlush" finished-at="2023-01-09T20:41:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cancel status=SUCCESS method=Test6_FooterPageTest.cancel()[pri:3, instance:BaseTest.Test6_FooterPageTest@2c7d121c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method signature="giftCard()[pri:4, instance:BaseTest.Test6_FooterPageTest@2c7d121c]" started-at="2023-01-09T20:41:16 IST" name="giftCard" finished-at="2023-01-09T20:41:59 IST" duration-ms="43624" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- giftCard -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:BaseTest.Test6_FooterPageTest@2c7d121c]" started-at="2023-01-09T20:41:59 IST" name="reportFlush" finished-at="2023-01-09T20:41:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=giftCard status=SUCCESS method=Test6_FooterPageTest.giftCard()[pri:4, instance:BaseTest.Test6_FooterPageTest@2c7d121c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- BaseTest.Test6_FooterPageTest -->
      <class name="BaseTest.Test3_GroceryPageTest">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:BaseTest.Test3_GroceryPageTest@24bdb479]" started-at="2023-01-09T20:37:16 IST" name="startTest" finished-at="2023-01-09T20:37:17 IST" duration-ms="1022" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseTest.Test3_GroceryPageTest.Grocery() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Grocery()[pri:1, instance:BaseTest.Test3_GroceryPageTest@24bdb479]" started-at="2023-01-09T20:37:17 IST" name="Grocery" finished-at="2023-01-09T20:37:45 IST" duration-ms="27928" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Grocery -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:BaseTest.Test3_GroceryPageTest@24bdb479]" started-at="2023-01-09T20:37:45 IST" name="reportFlush" finished-at="2023-01-09T20:37:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Grocery status=SUCCESS method=Test3_GroceryPageTest.Grocery()[pri:1, instance:BaseTest.Test3_GroceryPageTest@24bdb479] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:BaseTest.Test3_GroceryPageTest@24bdb479]" started-at="2023-01-09T20:37:45 IST" name="startTest" finished-at="2023-01-09T20:37:47 IST" duration-ms="1430" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseTest.Test3_GroceryPageTest.Cart() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Cart()[pri:2, instance:BaseTest.Test3_GroceryPageTest@24bdb479]" started-at="2023-01-09T20:37:47 IST" name="Cart" finished-at="2023-01-09T20:37:56 IST" duration-ms="9616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Cart -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:BaseTest.Test3_GroceryPageTest@24bdb479]" started-at="2023-01-09T20:37:56 IST" name="reportFlush" finished-at="2023-01-09T20:37:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Cart status=SUCCESS method=Test3_GroceryPageTest.Cart()[pri:2, instance:BaseTest.Test3_GroceryPageTest@24bdb479] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- BaseTest.Test3_GroceryPageTest -->
      <class name="BaseTest.Test1_VerifyTitlePage">
        <test-method is-config="true" signature="launchBrowser()[pri:0, instance:BaseTest.Test1_VerifyTitlePage@2c104774]" started-at="2023-01-09T20:35:44 IST" name="launchBrowser" finished-at="2023-01-09T20:35:47 IST" duration-ms="2594" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:BaseTest.Test1_VerifyTitlePage@2c104774]" started-at="2023-01-09T20:35:47 IST" name="startTest" finished-at="2023-01-09T20:36:17 IST" duration-ms="30164" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseTest.Test1_VerifyTitlePage.verifyTitle() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="verifyTitle()[pri:0, instance:BaseTest.Test1_VerifyTitlePage@2c104774]" started-at="2023-01-09T20:36:17 IST" name="verifyTitle" finished-at="2023-01-09T20:36:22 IST" duration-ms="5161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitle -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:BaseTest.Test1_VerifyTitlePage@2c104774]" started-at="2023-01-09T20:36:22 IST" name="reportFlush" finished-at="2023-01-09T20:36:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTitle status=SUCCESS method=Test1_VerifyTitlePage.verifyTitle()[pri:0, instance:BaseTest.Test1_VerifyTitlePage@2c104774] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:BaseTest.Test1_VerifyTitlePage@2c104774]" started-at="2023-01-09T20:36:22 IST" name="startTest" finished-at="2023-01-09T20:36:23 IST" duration-ms="1082" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseTest.Test1_VerifyTitlePage.verifyLogo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="verifyLogo()[pri:2, instance:BaseTest.Test1_VerifyTitlePage@2c104774]" started-at="2023-01-09T20:36:23 IST" name="verifyLogo" finished-at="2023-01-09T20:36:23 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogo -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:BaseTest.Test1_VerifyTitlePage@2c104774]" started-at="2023-01-09T20:36:23 IST" name="reportFlush" finished-at="2023-01-09T20:36:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogo status=SUCCESS method=Test1_VerifyTitlePage.verifyLogo()[pri:2, instance:BaseTest.Test1_VerifyTitlePage@2c104774] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="CloseBrowser()[pri:0, instance:BaseTest.Test1_VerifyTitlePage@2c104774]" started-at="2023-01-09T20:42:18 IST" name="CloseBrowser" finished-at="2023-01-09T20:42:19 IST" duration-ms="1211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
      </class> <!-- BaseTest.Test1_VerifyTitlePage -->
      <class name="BaseTest.Test5_NavigatorTest">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:BaseTest.Test5_NavigatorTest@34625ccd]" started-at="2023-01-09T20:39:43 IST" name="startTest" finished-at="2023-01-09T20:39:44 IST" duration-ms="1055" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseTest.Test5_NavigatorTest.Rightnavigate() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Rightnavigate()[pri:1, instance:BaseTest.Test5_NavigatorTest@34625ccd]" started-at="2023-01-09T20:39:44 IST" name="Rightnavigate" finished-at="2023-01-09T20:39:44 IST" duration-ms="3" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping this exception]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping this exception
at ExcelReport.ExcelManager.toCheckExecutionRequired(ExcelManager.java:37)
at BaseTest.Test5_NavigatorTest.Rightnavigate(Test5_NavigatorTest.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Rightnavigate -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:BaseTest.Test5_NavigatorTest@34625ccd]" started-at="2023-01-09T20:39:44 IST" name="reportFlush" finished-at="2023-01-09T20:39:44 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Rightnavigate status=SKIP method=Test5_NavigatorTest.Rightnavigate()[pri:1, instance:BaseTest.Test5_NavigatorTest@34625ccd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:BaseTest.Test5_NavigatorTest@34625ccd]" started-at="2023-01-09T20:39:44 IST" name="startTest" finished-at="2023-01-09T20:39:46 IST" duration-ms="1064" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseTest.Test5_NavigatorTest.leftNavigate() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="leftNavigate()[pri:2, instance:BaseTest.Test5_NavigatorTest@34625ccd]" started-at="2023-01-09T20:39:46 IST" name="leftNavigate" finished-at="2023-01-09T20:39:48 IST" duration-ms="2062" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- leftNavigate -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:BaseTest.Test5_NavigatorTest@34625ccd]" started-at="2023-01-09T20:39:48 IST" name="reportFlush" finished-at="2023-01-09T20:39:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=leftNavigate status=SUCCESS method=Test5_NavigatorTest.leftNavigate()[pri:2, instance:BaseTest.Test5_NavigatorTest@34625ccd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- BaseTest.Test5_NavigatorTest -->
      <class name="BaseTest.Test2_HomePageTest">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:BaseTest.Test2_HomePageTest@427b5f92]" started-at="2023-01-09T20:36:23 IST" name="startTest" finished-at="2023-01-09T20:36:24 IST" duration-ms="995" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseTest.Test2_HomePageTest.LoginTest() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="LoginTest()[pri:1, instance:BaseTest.Test2_HomePageTest@427b5f92]" started-at="2023-01-09T20:36:24 IST" name="LoginTest" finished-at="2023-01-09T20:36:40 IST" duration-ms="15568" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:BaseTest.Test2_HomePageTest@427b5f92]" started-at="2023-01-09T20:36:40 IST" name="reportFlush" finished-at="2023-01-09T20:36:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginTest status=SUCCESS method=Test2_HomePageTest.LoginTest()[pri:1, instance:BaseTest.Test2_HomePageTest@427b5f92] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:BaseTest.Test2_HomePageTest@427b5f92]" started-at="2023-01-09T20:36:40 IST" name="startTest" finished-at="2023-01-09T20:36:41 IST" duration-ms="945" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseTest.Test2_HomePageTest.searchMobile() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="searchMobile()[pri:2, instance:BaseTest.Test2_HomePageTest@427b5f92]" started-at="2023-01-09T20:36:41 IST" name="searchMobile" finished-at="2023-01-09T20:37:15 IST" duration-ms="34609" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchMobile -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:BaseTest.Test2_HomePageTest@427b5f92]" started-at="2023-01-09T20:37:15 IST" name="reportFlush" finished-at="2023-01-09T20:37:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchMobile status=SUCCESS method=Test2_HomePageTest.searchMobile()[pri:2, instance:BaseTest.Test2_HomePageTest@427b5f92] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:BaseTest.Test2_HomePageTest@427b5f92]" started-at="2023-01-09T20:37:15 IST" name="startTest" finished-at="2023-01-09T20:37:16 IST" duration-ms="1045" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseTest.Test2_HomePageTest.compareProduct() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="compareProduct()[pri:3, instance:BaseTest.Test2_HomePageTest@427b5f92]" started-at="2023-01-09T20:37:16 IST" name="compareProduct" finished-at="2023-01-09T20:37:16 IST" duration-ms="5" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping this exception]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping this exception
at ExcelReport.ExcelManager.toCheckExecutionRequired(ExcelManager.java:37)
at BaseTest.Test2_HomePageTest.compareProduct(Test2_HomePageTest.java:86)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareProduct -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:BaseTest.Test2_HomePageTest@427b5f92]" started-at="2023-01-09T20:37:16 IST" name="reportFlush" finished-at="2023-01-09T20:37:16 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=compareProduct status=SKIP method=Test2_HomePageTest.compareProduct()[pri:3, instance:BaseTest.Test2_HomePageTest@427b5f92] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- BaseTest.Test2_HomePageTest -->
      <class name="BaseTest.Test4_HeadersPageTest">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe]" started-at="2023-01-09T20:37:56 IST" name="startTest" finished-at="2023-01-09T20:37:57 IST" duration-ms="973" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseTest.Test4_HeadersPageTest.headersTest() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="headersTest()[pri:1, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe]" started-at="2023-01-09T20:37:57 IST" name="headersTest" finished-at="2023-01-09T20:38:03 IST" duration-ms="5321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- headersTest -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe]" started-at="2023-01-09T20:38:03 IST" name="reportFlush" finished-at="2023-01-09T20:38:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=headersTest status=SUCCESS method=Test4_HeadersPageTest.headersTest()[pri:1, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe]" started-at="2023-01-09T20:38:03 IST" name="startTest" finished-at="2023-01-09T20:38:04 IST" duration-ms="1028" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseTest.Test4_HeadersPageTest.electronic() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="electronic()[pri:2, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe]" started-at="2023-01-09T20:38:04 IST" name="electronic" finished-at="2023-01-09T20:38:14 IST" duration-ms="10474" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- electronic -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe]" started-at="2023-01-09T20:38:14 IST" name="reportFlush" finished-at="2023-01-09T20:38:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=electronic status=SUCCESS method=Test4_HeadersPageTest.electronic()[pri:2, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe]" started-at="2023-01-09T20:38:14 IST" name="startTest" finished-at="2023-01-09T20:38:16 IST" duration-ms="1238" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseTest.Test4_HeadersPageTest.offer() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="offer()[pri:3, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe]" started-at="2023-01-09T20:38:16 IST" name="offer" finished-at="2023-01-09T20:38:26 IST" duration-ms="10217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- offer -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe]" started-at="2023-01-09T20:38:26 IST" name="reportFlush" finished-at="2023-01-09T20:38:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=offer status=SUCCESS method=Test4_HeadersPageTest.offer()[pri:3, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe]" started-at="2023-01-09T20:38:26 IST" name="startTest" finished-at="2023-01-09T20:38:27 IST" duration-ms="1281" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseTest.Test4_HeadersPageTest.beauty() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="beauty()[pri:4, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe]" started-at="2023-01-09T20:38:27 IST" name="beauty" finished-at="2023-01-09T20:38:37 IST" duration-ms="10435" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beauty -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe]" started-at="2023-01-09T20:38:37 IST" name="reportFlush" finished-at="2023-01-09T20:38:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=beauty status=SUCCESS method=Test4_HeadersPageTest.beauty()[pri:4, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe]" started-at="2023-01-09T20:38:37 IST" name="startTest" finished-at="2023-01-09T20:38:39 IST" duration-ms="1223" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseTest.Test4_HeadersPageTest.Test_searchFlight() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Test_searchFlight()[pri:5, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe]" started-at="2023-01-09T20:38:39 IST" name="Test_searchFlight" finished-at="2023-01-09T20:39:03 IST" duration-ms="24416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_searchFlight -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe]" started-at="2023-01-09T20:39:03 IST" name="reportFlush" finished-at="2023-01-09T20:39:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test_searchFlight status=SUCCESS method=Test4_HeadersPageTest.Test_searchFlight()[pri:5, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe]" started-at="2023-01-09T20:39:03 IST" name="startTest" finished-at="2023-01-09T20:39:04 IST" duration-ms="1054" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseTest.Test4_HeadersPageTest.TwoWhellers() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="TwoWhellers()[pri:5, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe]" started-at="2023-01-09T20:39:04 IST" name="TwoWhellers" finished-at="2023-01-09T20:39:15 IST" duration-ms="10367" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TwoWhellers -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe]" started-at="2023-01-09T20:39:15 IST" name="reportFlush" finished-at="2023-01-09T20:39:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TwoWhellers status=SUCCESS method=Test4_HeadersPageTest.TwoWhellers()[pri:5, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe]" started-at="2023-01-09T20:39:15 IST" name="startTest" finished-at="2023-01-09T20:39:16 IST" duration-ms="1395" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseTest.Test4_HeadersPageTest.BecameSeller() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="BecameSeller()[pri:6, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe]" started-at="2023-01-09T20:39:16 IST" name="BecameSeller" finished-at="2023-01-09T20:39:43 IST" duration-ms="27510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BecameSeller -->
        <test-method is-config="true" signature="reportFlush(org.testng.ITestResult)[pri:0, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe]" started-at="2023-01-09T20:39:43 IST" name="reportFlush" finished-at="2023-01-09T20:39:43 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BecameSeller status=SUCCESS method=Test4_HeadersPageTest.BecameSeller()[pri:6, instance:BaseTest.Test4_HeadersPageTest@7e3f95fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- BaseTest.Test4_HeadersPageTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
